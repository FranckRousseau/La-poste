#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Dec 17 11:17:15 2019

@author: rousseau
"""
##Importation des librairies

from sqlalchemy.sql import text
from sqlalchemy import create_engine
import configparser
import os
import pandas as pd

#Mise en place des coordonnées de la base

config = configparser.ConfigParser()
config.read_file(open(os.path.expanduser("~/datalab.cnf")))

TBL = "handicap"
CNF = "pgBDD"

##Configuration de la connexion avec PostgreSQL

pgSQLengine = create_engine("postgresql://%s:%s@%s/%s" % (config[CNF]['user'], config[CNF]['password'], config[CNF]['host'], "BDD_Franck"))
print(pgSQLengine)

##Création d'une dataframe à partir du fichier CSV

URL = '/home/rousseau/Projet5/CSV/handicap.csv'

df_collect= pd.DataFrame()
df_collect = pd.DataFrame(columns=['id_hand','handid', 'hand_site','hand_type_site','hand_access'])
df_collect = pd.read_csv(URL, encoding = 'utf8', sep=',')


###Verifications et traitement des doublons

#duplicateRowsDF = df_collect[df_collect.duplicated([ 'handid', 'hand_site','hand_type_site','hand_access'])]
#len(duplicateRowsDF.index)


##Création des tables et implémentations dans PostgreSQL

pgSQLengine.execute("""CREATE TABLE IF NOT EXISTS "handicap"(
   id_hand INTEGER GENERATED BY DEFAULT AS IDENTITY,     
   handid INTEGER NOT NULL,
   hand_site character(50) NOT NULL,
   hand_type_site character(50) NOT NULL,
   hand_access character(100) NOT NULL
);""")


statement = text("""
INSERT INTO "handicap" (id_hand,handid, hand_site, hand_type_site,hand_access)
VALUES (:id_hand,:handid, :hand_site,:hand_type_site,:hand_access)""")

df_collect.to_sql('handicap', pgSQLengine, if_exists='append', index=False)



